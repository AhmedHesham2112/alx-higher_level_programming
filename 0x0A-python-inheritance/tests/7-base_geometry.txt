Test for 7-base_geometry.py
===========================

>>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Test a non-integer argument
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "ahmed")
    Traceback (most recent call last):
    	      ...
    TypeError: name must be an integer

Test a negative value:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", -1)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0

Test a zero value:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    	      ...
    ValueError: name must be greater than 0

Test a positive value:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 5)

Test integer_validator with no arguments:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator()
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

Test only one argument to integer_validator:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

Test three arguments to integer_validator:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", 1, 2)
    Traceback (most recent call last):
    	      ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

Trying to print the area
    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    	      ...
    Exception: area() is not implemented

Test one argument to area:
    >>> bg = BaseGeometry()
    >>> bg.area(5)
    Traceback (most recent call last):
    	      ...
    TypeError: area() takes 1 positional argument but 2 were given
